#introduce Package

install.packages('package-name')
library(package-name)  #package can be found at https://cran.r-project.org

# 1. use the R Console as a calculator. 
2+3
2*3
3*4
8/2
sqrt(2) # square root
exp(2) # natural exponential
2^3     # power
<= # Less than or equal to:
== # Is equal to:
!= # Is NOT equal to:
the AND operator (&)
the OR operator (|)
the NOT operator, otherwise known as the bang operator (!)

# Define and use variables:
a<-1
b<-2
a+b

#2.Vector, matrices and data frame
# Vectors:
x<-c(5,2,6,1,4,1)
y<-c('a','b','c','d','e','f')
z<-1:6
typeof(vector_name) #check the type of elements in a vector
length(vector_name) #check the length of a vector

# Vector combinatuon
v<-c(x,y,z) #x,y,z三个向量合并

# Matrices
A<-matrix(y,2,6) #以向量y为基础，构建两行6列的矩阵

A[1,2] #矩阵A第一行第二列的元素

A[1,2]<-1000 #将a12的数值改为1000

# Data frame
data<-data.frame(x,y,z)      #can include vectors of different type, but need to be same length
#You can think of a data frame as a spreadsheet or as a SQL table.
data[1,2] # element
data[1,] # row (observation)
data[,2] # column (variable)
data$x # x所有元素

#3.Functions in R

functionName(value)

mean(x)
sum(x)
max(x)
sd(x)
table(y) # frequency table
hist(x)
pie(table(y))

help(hist) # 查找某个function的详情可以用help指令

# 4.Data import and export:
getwd() #找到现在work directory的路径
setwd("/Users/zhangkaibang/Desktop/RData") #将路径设置为/Users/zhangkaibang/Desktop/RData
                                           #以后有要倒入的文件可以放到RData里
#for .txt using:  
read.table(), 
#for .csv, 
using read.csv() 

header=TRUE #table里面第一行用于列名称，不进行运算 和read. 搭配使用
header=FALSE #table第一行就进行运算 

#Show Export
head() #将导入的数据显示出来  returns the first 6 rows of a data frame
head(name,n) #first n rows of data frame
attach() #添加路径存储的索引，相当于绑定一个数据框 
detach()解除数据路径存储的绑定
summary() # returns the first 6 rows of a data frame

#If-Else Statement

if (TRUE) {
   print("Go to sleep!")
} else {
   print("Wake up!")
}



dplyr & readr packages

1) pipe operator
df %>%
head()      # equals to head(df)

2) 选中data frame 中的某些列 
select(data frame name, column name1, column name2...) #eg select(customers,age,gender)
or
data frame name %>%                        ##eg customers %>%
select( column name1, column name2...)      ##  select(age,gender)

3）Excluding Columns
df_name %>%
  select(-name1,-name2...)

4)Choosing Rows
data frame %>%
  filter(name1=='xxx',z>SSS)
#eg:
orders %>%
  filter(shoe_material == 'faux-leather',price > 25)
orders %>%
  filter(shoe_type == 'clogs' | price < 20) # 显示鞋子种类为clogs或价格低于20的所有rows
orders %>%
  filter(!(shoe_color == red)) #显示除了鞋子颜色是红色的所有rows

4)Arranging Rows
arrange() #arrange默认数字由小到大，字母从A到Z排列，某则要加desc表示descending order

#eg
customers %>%
  arrange(desc(age))
customers %>%
  arrange(name)
 
5)Adding a Column
mutate()
#eg
df %>%
  mutate(sales_tax = price * 0.075)

6)Adding Multiple Columns
mutate(a,b,c....)
#eg.
df %>%
  mutate(profit = price - cost_to_manufacture,
         in_stock = TRUE)

7)Transmute Columns # only keeping the new columns you add
transmute(a=,b=,...)

8)Rename Columns
rename(new_column_name = old_column_name)

#check renamed column: names() or colnames() #confirm the names of the columns

